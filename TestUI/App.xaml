<Application x:Class="TestUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TestUI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Farben-->
        <Color x:Key="BackgroundColor">#000000</Color>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
        <Color x:Key="LayerOneColor">#646464</Color>
        <SolidColorBrush x:Key="LayerOneBrush" Color="{StaticResource LayerOneColor}" />
        <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
        <Color x:Key="FontColor">#CCCCCC</Color>
        <SolidColorBrush x:Key="FontBrush" Color="{StaticResource FontColor}" />
        <Color x:Key="WindowNameColor">#FFFFFF</Color>
        <SolidColorBrush x:Key="WindowNameBrush" Color="{StaticResource WindowNameColor}" />
        <Color x:Key="LayerTwoColor">#464646</Color>
        <SolidColorBrush x:Key="LayerTwoBrush" Color="{StaticResource LayerTwoColor}" />

        <Style TargetType="{x:Type Control}" x:Key="tinyFont">
            <Setter Property="FontSize" Value="10" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="smallFont">
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="midFont">
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="licManFont">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="largeFont">
            <Setter Property="FontSize" Value="18" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="hugeFont">
            <Setter Property="FontSize" Value="24" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="tinyText">
            <Setter Property="FontSize" Value="10" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="smallText">
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="midText">
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="largeText">
            <Setter Property="FontSize" Value="18" />
        </Style>


        <!--Großer Button-->
        <Style x:Key="TileStyle" TargetType="{x:Type Button}">
            <Setter Property ="Width" Value="70" />
            <Setter Property ="Height" Value="70" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top" />
            <!--<Setter Property="Grid.Row" Value="1"/>-->
            <!--<Setter Property="Grid.RowSpan" Value="2"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="ButtonBorder" 
                                    SnapsToDevicePixels="True" 
                                    BorderBrush="#000000" 
                                    Background="{TemplateBinding Background}" 
                                    BorderThickness="0,0,0,0" >
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CanvasStyle" TargetType="Canvas">
            <Setter Property ="Width" Value="170" />
            <Setter Property ="Height" Value="170" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>


        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#000000"/>
            <Setter Property="BorderBrush" Value="#646464"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="ButtonBorder" 
                                    SnapsToDevicePixels="True" 
                                    BorderBrush="#000000" 
                                    Background="{TemplateBinding Background}" 
                                    BorderThickness="0,0,0,0" >
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#646464"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource midText}">
            <Setter Property="Margin" Value="2,0,0,-6"/>
            <Setter Property ="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Control.Foreground" Value="#C8C8C8"/>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox"  BasedOn="{StaticResource licManFont}">
            <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="TextBoxBorder"
                                Padding="1"
                                CornerRadius="0" 
                                BorderThickness="1" 
                                Focusable="True" 
                                Background="{DynamicResource BackgroundBrush}" 
                                BorderBrush="{DynamicResource LayerOneBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="TextBoxBorder" Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource LayerOneBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="TextBoxBorder" Property="Background" Value="{DynamicResource LayerTwoBrush}"/>
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource LayerOneBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" >
                                <Setter TargetName="TextBoxBorder" Property="BorderThickness" Value="3" />
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource LayerTwoBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True" >
                                <Setter TargetName="TextBoxBorder" Property="BorderThickness" Value="1" />
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource LayerOneBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource LayerTwoBrush}"/>
                    <Setter Property = "BorderThickness" Value="3"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource LayerOneBrush}"/>
                    <Setter Property = "BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Styles für Scrollbar-->
        <Style  x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="BorderLineButton"
                                Margin="0"
                                CornerRadius="0"
                                BorderThickness="1" 
                                Background="#646464"
                                BorderBrush="#464646"
                                >
                            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content,  RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Fill>
                                    <SolidColorBrush Color="#CCCCCC"/>
                                </Path.Fill>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BorderLineButton" Property="BorderThickness" Value="3"/>
                                <Setter TargetName="BorderLineButton" Property="BorderBrush" Value="{StaticResource LayerTwoBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="BorderBarThumb"
                                CornerRadius="0"
                                Background="#646464"
                                BorderBrush="#464646"
                                BorderThickness="1" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BorderBarThumb" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="BorderBarThumb" Property="BorderBrush" Value="#262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="20" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="20" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3"
                        CornerRadius="0"
                        Background="#262626"
                        BorderBrush="#464646"
                        BorderThickness="1"/>
                <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="20"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0" >
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="20" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3"
            CornerRadius="0"
            Background="#464646" />
                <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="20"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
           Grid.Column="1"
           IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="0,1,0,1">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <Style x:Key= "MyScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="20" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key= "MyScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid >
                            <ScrollContentPresenter 
                                        Width="{TemplateBinding Width}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"/>
                            <ScrollBar  
                                        Name="PART_VerticalScrollBar" 
                                        Margin="564,0,0,0"
                                        Style="{StaticResource MyScrollBar}" 
                                        Height="{TemplateBinding Height}"
                                        Width="20"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Value="{TemplateBinding VerticalOffset}"
                                        Maximum="{TemplateBinding ScrollableHeight}"
                                        ViewportSize="{TemplateBinding ViewportHeight}"
                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
